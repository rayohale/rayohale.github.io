/* Opción 1 */

#activar ~ .desplegable {display: none;overflow: hidden;}
#activar:checked ~ .desplegable {display: block;}

/** s
Es importante que el input y su correspondiente label, tengan el mismo nombre (activar en el ejemplo), entre otras cuestiones porque ambos elementos pueden ir separados sin problema intercalados por otro código cualquiera y esa es la clave que permite relacionar uno con otro. Además de esos dos lo único que necesitamos es una caja con el contenido que pretendemos activar con el botón.

En el CSS lo que hemos hecho es usar el selector correspondiente al botón (#activar) e indicar que su hermano (~) que es la caja con el contenido (.desplegable), inicialmente se oculte. Luego utilizamos el estado :checked para que cuando se pincha en el input, la caja y su contenido se haga visible.

Este sería el resultado.
(Nótese que es indiferente pinchar en el botón o en su etiqueta "Clic para ver contenido")




Ahora vamos a jugar un poquito con el estilo para que esto tenga una pinta más mona.

Usaremos el mismo HTML pero sin ninguna leyenda dentro del label. Las nuevas reglas CSS que veréis después, en este mismo orden...

    Esconden el checkbox para que sólo se vea su etiqueta
    Cambian el aspecto de la etiqueta para que se asemeje más a un botón
    Añaden un texto ("Abrir") a la etiqueta en el estado normal del checkbox
    Esconden el contenido oculto y le dan un poquito de forma y color
    Muestran el contenido oculto cuando se activa el checkbox
    Añaden un texto distinto ("Cerrar") a la etiqueta cuando el checkbox está activado

*/

#activar {display: none;}
.inputlabel {display: inline-block;height: 20px;line-height: 20px;padding: 5px 10px;background: #000;color: #fff;}
#activar ~ .inputlabel:before {content: "ABRIR"}
#activar ~ .desplegable {display: none;overflow: hidden;padding: 10px 20px; background: #000;color: #fff;}
#activar:checked ~ .desplegable {display: block;}
#activar:checked ~ .inputlabel:before {content: "CERRAR"}

/*
En fin, el truco es ese y ya dependiendo del aspecto que le deis al conjunto, el lugar dónde lo situéis y el tipo de contenido que ocultéis, pues así será el resultado. Este que viene a continuación está orientado a relacionar las propias redes sociales, pero bien puede ser adaptado con poco trabajo para cualquier otro tipo de menú.

Lo puse embebido desde Codepen, así que como en otras ocasiones, podéis trastear con él para probar cosillas.

See the Pen Solapa superior desplegable con clic #css by Oloman (@oloman) on CodePen.

¿Vemos otro post al azar por si le encuentras utilidad o quizás prefieres ser más metódico y suscribirte a nuestras entradas por correo? También puedes imprimir este artículo y por supuesto compartirlo en redes sociales si fue de tu agrado. 
*/


/* Opcion 2 */

/*

En el siguiente código, 
mediante el uso de css quiero ocultar el div.contenedor-desc 
y utilizando :hover sobre cualquier elemento de .lista-albumes 
mostrarlo nuevamente. Intente hacerlo de manera similar a como 
hice con el menu desplegable pero no me funcionó. Anexo a continuacion el codigo css

*/

* {
  margin: 0;
  padding: 0;
}

html {
  font-size: 62.5%; /** Reset para REMS - 62.5% = 10px de 16px (1rem = 16px default)**/
  box-sizing: border-box;
}

*,*:before,*:after {
  box-sizing: inherit;
}

body {
  font-family: 'Roboto', sans-serif;
  font-size: 1.6rem;
  line-height: 1.5;
  background-color: #ffffff;
}
.contenedor {
  width: 95%;
  max-width: 120rem;
  margin: 0 auto;
}
.seccion {
  margin-top: 2rem;
  margin-bottom: 2rem;
  height: 30rem;
}
.centrar-texto {
  text-align: center;
}

main {
  margin-bottom: 0 !important;
  margin-top: 0 !important;
}
div.main-background {
  height: 100%;
  min-height: 30rem;
  background-position: center center;
  background-size: cover;
  display: flex;
  align-items: center;
}
div.ms {
  background-image: url(../img/musica-background.jpg);
}
div.resaltar {
  background-color: rgba(0,0,0,0.5);
  color: #ffffff;
  width: 100%;
  height: 21rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
div.resaltar h1 {
  margin-top: 1.2rem;
  margin-bottom: 0.5rem;
}


div.resaltar p {
  width: 70%;
  margin: 0 auto;
}

/*Musica*/

main .lista-albumes {
  display: flex;
  justify-content: space-around;
  align-items: center;
  margin-top: 3rem;
  margin-bottom: 3rem;
}

main .lista-albumes div:hover {
  transform: scale(1.1);
  cursor: pointer;
  transition: 0.4s;
  border: solid 0.5rem #ff6347;
}

.contenedor-desc {
  display: none;
}

main .lista-albumes div:hover main > .contenedor-desc {
  display: flex;
  justify-content: center;
  align-items: center;
}

main .descripcion-album {
  height: 25rem;
  border: solid 0.5rem #ff6347;
  background-color: rgba(0,0,0,0.8);
  border-radius: 1rem;
  width: 70%;
}

/*

Dejo todo el codigo necesario. Estoy atento para cualquier posible solucion que pueda solucionar mi problema. Agradezco un monton

*/


/* RESPUESTA 1


Hay que tener en cuenta que en CSS solamente puedes interactuar
o con hijos de un elemento o con hermanos posteriores, nunca con 
ancestros de un elemento o con sus hermanos anteriores.

Clarificado esto, podemos hacer algo para interactuar 
entre .lista-albumes y .contenedor-desc ya que son elementos 
hermanos y el queremos afectar a un hermano posterior al elemento que recibe el hover. Para ello usamos el selector +, que sirve para afectar al hermano inmediatamente posterior a un elemento, provocando que cada .lista-albumes tan solo afecte al .contenedor-desc que le corresponde.

.contenedor-desc {
  color: red;
  font-size: 2rem;
  margin: 10px 0;
  display: none;
}

.lista-albumes:hover + .contenedor-desc {
  display: block;
}

*/

/* RESPUESTA 2



Lastimosamente la única forma de afectar a otro elemento 
mediante la acción hover es si este elemento esta dentro 
del elemento principal, es decir, si contenedor-desc estuviese 
dentro de lista-albumes, entonces podrías hacer algo como esto.

.lista-albumes:hover > .contenedor-desc {
     display:block;
}

Otra forma seria mediante jQuery usando toggleClass y hover, esto no requiere que contenedor-desc este dentro de lista-albumes:

$(".lista-albumes").hover(function(){
  $(".contenedor-desc").toggleClass("show");
});

En tus CSS

.show {
  display: block!important;
}

Esto requiere agregar el script de jQuery en tu header


